[프로젝트 진행 순서]
게시물 만들기 - 이미지 업로드 - 회원가입


가상환경 만들기
가상환경 실행 후 django 설치
git ignore 지정
insta 프로젝트 생성
posts 앱 생성
settings.py 앱 등록
DIR에 BASE_DIR / 'templates' 설정 및 생성, base.html 구조 잡기

models.py에 class(모델)생성 (Post)
pillow 인스톨 (image를 업로드 하기 위해 필요) - 가상환경
admin.py에 모델 등록 admin.site.register(Post)
create super user 생성
서버 돌려서 사진 2장 올려봄

사용자가 올리는 데이터들(image폴더, db)은 git에 올리지 않는 것이 좋음
.gitignore 파일 최하단에 image/ 를 등록하기

pip freeze >> requirements.txt
이 프로젝트를 사용하는 데에 지금까지 설치한 모든 데이터를 txt로 저장해줘(뒤에 추가됨)
pip freeze > requirements.txt
덮어씌워줘

urls.py에 넘겨줄 url 주소 작성
posts 앱에 url 파일 생성 및 작성하기 (admin)
view.py에서 index 함수 작성
index 페이지 만들기

settings.py 에 MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'  

django resized 라이브러리 설치



---
M:N 관계
의사테이블 / 환자테이블 각각 만들고
그 둘의 관계를 만들어 줄 때는 중간테이블(M:N관계)을 만들어줌

좋아요기능
user_id 유저가 post_id 게시물을 좋아합니다.
라는 관계를 위한 중간 테이블 만들기
중간 테이블 데이터를 카운팅하면 좋아요 수
중간 테이블 데이터 하나를 지우면 좋아요 취소 기능이 됨

우리는 column을 추가하겠지만
django가 자동으로 중간테이블 모델을 만들어줄 것
---

1:N관계에서 1의 정보만 가지고 있더라도 연결된 나머지 N의 데이터에서 값을 뽑아낼 수 있도록
django가 1에 하위의 N(name)_set을 자동으로 붙여줌
여러개의 데이터를 불러오게 되면 [] 리스트로 묶어서 보여줌
(예)
post : like 는 1 : N
만약 like 정보가 없더라도 ForeignKey를 통해 1:N 관계를 만들어주면
django가 1인 post에 자동으로 comment_set을 만들어줌
1번 post에 달린 like를 보고싶으면 post.like_set.all로 가져올 수 있음

---

post : like 는 1 : N / like : user 는 N : 1

M:N관계에서 중간 테이블은 양 옆의 상위 테이블로부터
1:N, N:1의 관계로 있으므로, 1에 n_SET이 자동으로 생성됨
이때, 같은 이름으로 set이 생성되므로 충돌되지 않게 이름 임의설정


---

follow 는 맞팔은 양방향, 한쪽만 팔로우를 할 수도 있기에(단방향) like와는 다르게 적용
유저와 유저를 연결